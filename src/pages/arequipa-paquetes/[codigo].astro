---
import Layout from "../../layouts/Layout.astro";
import paquetesData from "../../data/paquetes_aqp.json";
import Time from "../../icons/Time.astro";
import Calendar from "../../icons/Calendar.astro";
import { Image } from "astro:assets";

// Importar imágenes
import monasterio1 from "../../images/paquetes-arequipa/monasterio-santa-catalina.jpg";
import monasterio2 from "../../images/paquetes-arequipa/monasterio-santa-catalina-2.jpg";
import monasterio3 from "../../images/paquetes-arequipa/monasterio-santa-catalina-3.jpg";
import valle1 from "../../images/paquetes-arequipa/valle-colca.jpg";
import valle2 from "../../images/paquetes-arequipa/valle-colca-2.jpg";
import valle3 from "../../images/paquetes-arequipa/valle-colca-3.jpg";
import cantera1 from "../../images/paquetes-arequipa/cantera-sillar.jpg";
import cantera2 from "../../images/paquetes-arequipa/cantera-sillar-2.jpg";
import cruzCondor from "../../images/paquetes-arequipa/cruz-condor.jpg";
import sillustani from "../../images/paquetes-arequipa/sillustani.jpg";

export async function getStaticPaths() {
    const { paquetes_turisticos: paquetes } = paquetesData;
    return paquetes.map((paquete) => ({
        params: {
            codigo: paquete.codigo
                .toLowerCase()
                .replace(/\./g, "-")
                .replace(/\s/g, "-"),
        },
        props: { paquete },
    }));
}

const { paquete } = Astro.props;

const obtenerImagenesPaquete = (codigo: string) => {
    const imagenes: Record<string, any[]> = {
        "CT.8425-001": [monasterio1],
        "CT.8425-002": [valle1],
        "CT.8425-003": [cantera1, cantera2, valle1, valle2],
        "CT.8425-004": [monasterio1, monasterio2, valle2, valle3],
        "CT.8425-005": [cruzCondor, monasterio3, valle1],
        "CT.8425-006": [sillustani, monasterio1, valle2, cruzCondor],
        "CT 8425-E001": [monasterio3, valle3, cruzCondor, cantera2],
    };
    return imagenes[codigo] || [];
};

const imagenes = obtenerImagenesPaquete(paquete.codigo);
const { paquetes_turisticos: todosPaquetes } = paquetesData;

const obtenerPaquetesRelacionados = (codigoActual: string) => {
    const paquetesFiltrados = todosPaquetes.filter(
        (p) => p.codigo !== codigoActual,
    );
    return [...paquetesFiltrados].sort(() => 0.5 - Math.random()).slice(0, 3);
};

const generarSlug = (codigo: string): string =>
    codigo
        .toLowerCase()
        .replace(/\./g, "-")
        .replace(/\s/g, "-")
        .replace(/[^a-z0-9-]/g, "");

const paquetesRelacionados = obtenerPaquetesRelacionados(paquete.codigo);
---

<Layout title={paquete.nombre} description="">
    <div class="min-h-screen py-12">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <a href="/arequipa-paquetes" class="back-link"
                >← Volver a todos los paquetes</a
            >

            <div class="paquete-header">
                <h1 class="title text-[#3A7474]">{paquete.nombre}</h1>
                <div class="paquete-subtitle">
                    <span class="flex gap-x-2 items-center"
                        ><Time class="size-6" /> {paquete.duracion}</span
                    >
                    <span
                        class="bg-[#3A7474] text-pink-100 text-xs italic font-medium px-4 py-2"
                        >{paquete.codigo}</span
                    >
                </div>

                <!-- Carrusel con Image de Astro -->
                <div class="relative w-full overflow-hidden rounded-xl">
                    <div
                        class="flex transition-transform duration-500 ease-in-out"
                        id="carousel-images"
                        style="transform: translateX(0%)"
                    >
                        {
                            imagenes.map((img, idx) => (
                                <Image
                                    src={img}
                                    alt={`Imagen ${idx + 1} de ${paquete.nombre}`}
                                    class="shrink-0 w-full h-[400px] object-cover"
                                    width={800}
                                    height={400}
                                    format="jpg"
                                    loading="lazy"
                                />
                            ))
                        }
                    </div>

                    <!-- Indicadores -->
                    {
                        imagenes.length > 1 && (
                            <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2 z-10">
                                {imagenes.map((_, idx) => (
                                    <span
                                        class="w-3 h-3 rounded-full bg-white/60 hover:bg-white transition-all cursor-pointer"
                                        data-idx={idx}
                                    />
                                ))}
                            </div>
                        )
                    }
                </div>
            </div>

            <div class="paquete-details">
                <h2 class="section-title">Incluye:</h2>
                <ul>
                    {
                        paquete.incluye.map((item) => (
                            <li class="list-item">{item}</li>
                        ))
                    }
                </ul>

                <h2 class="section-title">No incluye:</h2>
                <ul>
                    {
                        paquete.no_incluye.map((item) => (
                            <li class="list-item">{item}</li>
                        ))
                    }
                </ul>

                <h2 class="section-title">Itinerario:</h2>
                {
                    paquete.itinerario.map((dia) => (
                        <div>
                            <p class="flex gap-x-2 items-center itinerario-day mb-4">
                                <Calendar /> Día {dia.dia}:
                            </p>
                            <ul>
                                {dia.actividades.map((actividad) => (
                                    <li class="list-item">{actividad}</li>
                                ))}
                            </ul>
                        </div>
                    ))
                }
            </div>

            <div class="my-12">
                <h1 class="text-2xl font-bold text-[#3A7474] mb-6">
                    Paquetes similares
                </h1>

                <div
                    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
                >
                    {
                        paquetesRelacionados.map((paqueteRel) => {
                            const slug = generarSlug(paqueteRel.codigo);
                            const imagenes = obtenerImagenesPaquete(
                                paqueteRel.codigo,
                            );
                            const imagenPrincipal =
                                imagenes.length > 0 ? imagenes[0] : null;

                            return (
                                <a
                                    href={`/arequipa-paquetes/${slug}`}
                                    class="group bg-white shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1 rounded-xl"
                                >
                                    <div class="relative h-48 overflow-hidden">
                                        {imagenPrincipal ? (
                                            <Image
                                                src={imagenPrincipal}
                                                alt={`Imagen de ${paqueteRel.nombre}`}
                                                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                                                width={400}
                                                height={200}
                                                format="jpg"
                                                loading="lazy"
                                            />
                                        ) : (
                                            <div class="w-full h-full bg-gray-200 flex items-center justify-center text-gray-500 text-sm">
                                                Sin imagen
                                            </div>
                                        )}

                                        <span class="absolute top-3 right-3 bg-[#3A7474] text-pink-100 text-xs italic font-medium px-2 py-1 rounded">
                                            {paqueteRel.codigo}
                                        </span>
                                    </div>

                                    <div class="p-4">
                                        <h3 class="text-lg font-bold text-gray-800 mb-2 line-clamp-2">
                                            {paqueteRel.nombre}
                                        </h3>
                                        <div class="flex items-center text-[#3A7474] font-medium text-sm">
                                            <Time class="w-4 h-4 mr-1" />
                                            {paqueteRel.duracion}
                                        </div>
                                    </div>
                                </a>
                            );
                        })
                    }
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        function initSliderPaquetesAqp() {
            const container = document.getElementById("carousel-images");
            const dots = document.querySelectorAll("[data-idx]");
            let current = 0;

            function updateCarousel() {
                if (!container) return;
                container.style.transform = `translateX(-${current * 100}%)`;
                dots.forEach((dot, idx) => {
                    dot.classList.toggle("bg-white", idx !== current);
                    dot.classList.toggle("bg-[#3A7474]", idx === current);
                });
            }

            function goToSlide(index) {
                current = index;
                updateCarousel();
            }

            if (container && dots.length > 1) {
                dots.forEach((dot) => {
                    dot.addEventListener("click", () => {
                        const index = parseInt(dot.getAttribute("data-idx"));
                        goToSlide(index);
                    });
                });

                setInterval(() => {
                    current = (current + 1) % dots.length;
                    updateCarousel();
                }, 4000);
            }

            updateCarousel();
        }
        // Inicializar en carga inicial
        document.addEventListener("DOMContentLoaded", initSliderPaquetesAqp);

        // Re-inicializar en navegación SPA con Astro
        document.addEventListener("astro:after-swap", initSliderPaquetesAqp);
    </script>
</Layout>

<style>
    .title {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }
    .paquete-header {
        display: flex;
        flex-direction: column;
        margin-bottom: 2rem;
    }
    .paquete-subtitle {
        display: flex;
        justify-content: space-between;
        color: #4a5568;
        margin-bottom: 1rem;
        align-items: center;
    }
    .section-title {
        font-weight: bold;
        margin-top: 2rem;
        margin-bottom: 1rem;
        color: #510424;
        font-size: 1.25rem;
        border-bottom: 1px solid #510424;
        padding-bottom: 0.25rem;
    }
    .list-item {
        margin-left: 1.5rem;
        list-style-type: disc;
        margin-bottom: 0.5rem;
        color: #4a5568;
    }
    .itinerario-day {
        font-weight: bold;
        margin-top: 1rem;
        color: #2d3748;
    }
    .back-link {
        display: inline-block;
        margin-bottom: 2rem;
        color: #3a7474;
        font-weight: bold;
        transition: color 0.2s;
        text-decoration: none;
    }
    .back-link:hover {
        text-decoration: underline;
    }

    @media (max-width: 768px) {
        .title {
            font-size: 1.5rem;
        }
    }
</style>
