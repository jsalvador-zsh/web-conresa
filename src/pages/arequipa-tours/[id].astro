---
// src/pages/tours/[id].astro
import toursData from "../../data/tours_arequipa.json";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";

import arequipaCityTour from "../../images/paquetes-arequipa/arequipa-panoramica.jpg";
import colcaCanyon from "../../images/paquetes-arequipa/valle-colca.jpg";
import monasterio from "../../images/paquetes-arequipa/monasterio-santa-catalina-4.jpg";
import salinasLagoon from "../../images/paquetes-arequipa/salinas.jpg";
import santaCatalina from "../../images/paquetes-arequipa/monasterio-santa-catalina.jpg";
import campina from "../../images/paquetes-arequipa/volcan-1.jpg";
import sabandia from "../../images/paquetes-arequipa/molino-sabandia.jpg";
import museos from "../../images/paquetes-arequipa/monasterio-santa-catalina-5.jpg";
import quequena from "../../images/paquetes-arequipa/quequena.jpg";
import cantera from "../../images/paquetes-arequipa/cantera-sillar-3.jpg";
import virgen from "../../images/paquetes-arequipa/virgen-chapi.jpg";
import salinas from "../../images/paquetes-arequipa/laguna-salinas.jpg";

import defaultImage from "../../images/paquetes-arequipa/imagen-default.svg";

import { Image } from "astro:assets";

// Mapeo de imágenes por tour ID
const tourImages = {
  "1": arequipaCityTour,
  "2": monasterio,
  "3": colcaCanyon,
  "4": salinasLagoon,
  "5": campina,
  "6": museos,
  "7": sabandia,
  "8": quequena,
  "9": cantera,
  "10": virgen,
  "11": salinas,
  // Agrega más mapeos según tus tours
};

// Exporta getStaticPaths para generar las rutas estáticas
export async function getStaticPaths() {
    return toursData.map((tour) => ({
        params: { id: tour.id.toString() },
        props: { tour }, // Pasamos el tour completo como prop
    }));
}

// Ahora recibimos el tour como prop en lugar de buscarlo
const { tour } = Astro.props;

// Obtener imagen para este tour
const tourImage = tourImages[tour.id] || defaultImage;

// Función para obtener 3 tours aleatorios excluyendo el actual
const obtenerToursRelacionados = (idActual: string): typeof tour[] => {
  const toursFiltrados = toursData.filter(t => t.id.toString() !== idActual);
  return [...toursFiltrados]
    .sort(() => 0.5 - Math.random())
    .slice(0, 3);
};

const toursRelacionados = obtenerToursRelacionados(tour.id.toString());
---

<Layout title={tour.title} description={tour.shortDescription || `Descubre este tour en Arequipa: ${tour.title}`}>
    <div class="py-12">
        <div class="relative h-64 md:h-[500px] overflow-hidden">   
            <Image
                src={tourImage}
                alt={tour.title}
                class="w-full h-full object-cover"
                width={1200}
                height={600}
                format="webp"
                quality={80}
                transition:name={`image-${tour.id}`}
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent flex items-center justify-center p-8">
                <div class="text-center">
                <span class="cursive-font text-3xl md:text-4xl lg:text-6xl font-bold text-white mb-2 font-serif">
                    {tour.title}
                </span>
                </div>
            </div>
            </div>
        <div class=" mb-12 container mx-auto px-4 sm:px-6 lg:px-8">
  <div class="p-8 md:p-10">
    <div class="prose max-w-none">
      {tour.description && (
        <div class="mb-10 pb-8 border-b border-gray-100">
          <div class="flex items-center mb-6">
            <div class="bg-[#48887F] w-2 h-8 mr-3 rounded-full"></div>
            <h2 class="text-lg md:text-3xl font-bold text-[#48887F] font-serif">Descripción del Tour</h2>
          </div>
          <p class="text-gray-700 text-base md:text-lg leading-relaxed">{tour.description}</p>
        </div>
      )}

      <div class="mb-10 pb-8 border-b border-gray-100">
        <div class="flex items-center mb-6">
          <div class="bg-[#48887F] w-2 h-8 mr-3 rounded-full"></div>
          <h2 class="text-2xl md:text-3xl font-bold text-[#48887F] font-serif">Visitas Incluidas</h2>
        </div>
        <ul class="space-y-4">
          {tour.included_visits.map((visit, index) => (
            <li class="flex items-start bg-gray-50 p-4 rounded-lg hover:bg-[#48887F]/5 transition-colors duration-200">
              <div class="bg-[#48887F] text-white p-1 rounded-full mr-3 mt-0.5 flex-shrink-0">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <span class="text-gray-700 text-base md:text-lg" set:html={visit} />
            </li>
          ))}
        </ul>
      </div>

      {tour.itinerario && tour.itinerario.length > 0 && (
        <div class="mb-10 pb-8 border-b border-gray-100">
          <div class="flex items-center mb-6">
            <div class="bg-[#48887F] w-2 h-8 mr-3 rounded-full"></div>
            <h2 class="text-2xl md:text-3xl font-bold text-[#48887F] font-serif">Itinerario Detallado</h2>
          </div>
          <div class="space-y-6">
            {tour.itinerario.map((item, index) => (
              <div class="relative pl-6 before:absolute before:left-0 before:top-3 before:w-3 before:h-3 before:bg-[#48887F] before:rounded-full">
                <div class="bg-gray-50 hover:bg-[#48887F]/5 p-4 rounded-lg transition-colors duration-200 border-l-4 border-[#48887F]">
                  <p class="text-gray-700 text-lg leading-relaxed" set:html={item} />
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {tour.price && (
        <div class="bg-gradient-to-r from-[#48887F]/10 to-[#48887F]/5 p-8 rounded-xl border border-[#48887F]/20 relative overflow-hidden">
          <div class="absolute -right-4 -top-4 text-[#48887F]/10">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-bold text-[#48887F] mb-1">Inversión desde</h3>
          <p class="text-4xl font-bold text-[#48887F] mb-2">
            {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(tour.price)}
          </p>
          <p class="text-sm text-gray-600">*Precio por persona en base a habitación doble</p>
          <div class="mt-4">
            <a href="#contacto" class="inline-block bg-[#48887F] hover:bg-[#3a6d66] text-white font-medium py-2 px-6 rounded-lg transition-colors duration-300 shadow-md">
              Consultar disponibilidad
            </a>
          </div>
        </div>
      )}
    </div>
  </div>
</div>

        <!-- Tours Relacionados -->    
        <div class="mb-12 container mx-auto px-4 sm:px-6 lg:px-8">
            <h2 class="text-2xl font-bold text-gray-800 mb-6 font-serif">Tours que también te pueden interesar</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {toursRelacionados.map((tourRel) => {
                    const relImage = tourImages[tourRel.id] || defaultImage;
                    return (
                        <a
                            href={`/arequipa-tours/${tourRel.id}`}
                            class="group bg-white rounded-xl shadow-md overflow-hidden transition-all duration-300 hover:shadow-lg hover:-translate-y-1"
                        >
                            <div class="relative h-48 overflow-hidden">
                                <Image
                                    src={relImage}
                                    alt={tourRel.title}
                                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                                    width={400}
                                    height={300}
                                    loading="lazy"
                                    format="webp"
                                    quality={70}
                                />
                                <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent"></div>
                                <span class="absolute top-3 right-3 bg-[#48887F] text-white text-xs font-medium px-3 py-1 rounded-full">
                                    {tourRel.modality}
                                </span>
                            </div>
                            <div class="p-4">
                                <h3 class="text-lg font-bold text-gray-800 mb-2 line-clamp-2 font-serif">
                                    {tourRel.title}
                                </h3>
                                <div class="flex items-center text-[#48887F] font-medium text-sm">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="w-4 h-4 mr-1"
                                        fill="none"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                                        />
                                    </svg>
                                    {tourRel.duration}
                                </div>
                            </div>
                        </a>
                    );
                })}
            </div>
        </div>
    </div>
</Layout>


</Layout>

<style>
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }
    .title {
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }
    .tour-header {
        display: flex;
        flex-direction: column;
        margin-bottom: 2rem;
    }
    .tour-image {
        width: 100%;
        height: 400px;
        object-fit: cover;
        margin-bottom: 1.5rem;
        box-shadow:
            0 4px 6px -1px rgba(0, 0, 0, 0.1),
            0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    .tour-subtitle {
        display: flex;
        justify-content: space-between;
        color: #4a5568;
        margin-bottom: 1.5rem;
        align-items: center;
    }
    .modality-badge {
        background-color: #48887F;
        color: white;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
    }
    .section-title {
        position: relative;
        font-weight: bold;
        margin-top: 2rem;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        color: #48887F;
        font-size: 1.25rem;
    }
    .section-title::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: 2px; /* Ajusta según el tamaño de tu imagen */
        width: 95%;
        height: 1px;
        background-color: #48887F;
    }
    .section-title::before {
        content: "";
        position: absolute;
        right: 0;
        bottom: -15px; /* Posiciona la imagen debajo del borde */
        width: 40px;
        height: 40px;
        background-image: url('/seashell.png');
        background-size: contain;
        background-repeat: no-repeat;
        z-index: 10;
    }
    .list-item {
        margin-left: 1.5rem;
        list-style-type: disc;
        margin-bottom: 0.5rem;
        line-height: 1.6;
    }
    .itinerario-item {
        margin-bottom: 1rem;
        line-height: 1.6;
    }
    .back-link {
        display: inline-block;
        margin-bottom: 2rem;
        color: #48887F;
        text-decoration: none;
        font-weight: bold;
        transition: color 0.2s ease;
    }
    .back-link:hover {
        color: #48887F;
        text-decoration: underline;
    }

    /* Estilos responsivos */
    @media (max-width: 768px) {
        .container {
            padding: 1rem;
        }
        .title {
            font-size: 1.5rem;
        }
        .paquete-image {
            height: 250px;
        }
        .section-title::before {
            width: 30px;
            height: 30px;
            bottom: -10px;
        }
        .section-title::after {
        width: 90%;
    }

    /* View Transitions animations */
    ::view-transition-old(root),
    ::view-transition-new(root) {
        animation-duration: 0.5s;
    }

    @keyframes slide {
        from {
            transform: translateX(-20px);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @keyframes fade {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
</style>
