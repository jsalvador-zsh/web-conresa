---
import img1 from "../images/slide/imagen-1.webp";
import img2 from "../images/slide/imagen-2.webp";
import img3 from "../images/slide/imagen-3.webp";
import img4 from "../images/slide/imagen-4.webp";
import img5 from "../images/slide/imagen-5.webp";

import { Image } from "astro:assets";

const slides = [
  {
    image: img1,
    title: "Descubre el Per칰 con nosotros",
    subtitle: "Amazonas",
    description:
      "Viaja a los destinos m치s incre칤bles, vive experiencias 칰nicas y memorables.",
  },
  {
    image: img2,
    title: "Descubre el Per칰 con nosotros",
    subtitle: "Ca침칩n del Colca",
    description:
      "Viaja a los destinos m치s incre칤bles, vive experiencias 칰nicas y memorables.",
  },
  {
    image: img3,
    title: "Descubre el Per칰 con nosotros",
    subtitle: "Arequipa",
    description:
      "Viaja a los destinos m치s incre칤bles, vive experiencias 칰nicas y memorables.",
  },
  {
    image: img4,
    title: "Descubre el Per칰 con nosotros",
    subtitle: "Huaca Pucllana",
    description:
      "Viaja a los destinos m치s incre칤bles, vive experiencias 칰nicas y memorables.",
  },
  {
    image: img5,
    title: "Descubre el Per칰 con nosotros",
    subtitle: "Islas de los Uros",
    description:
      "Viaja a los destinos m치s incre칤bles, vive experiencias 칰nicas y memorables.",
  },
];

// Clonar 칰ltimo y primero para efecto infinito
const extendedSlides = [slides[slides.length - 1], ...slides, slides[0]];
---

<section
  class="relative h-[calc(100vh-80px)] overflow-hidden z-0 mb-8"
  id="hero-slider"
>
  <div
    id="slide-wrapper"
    class="flex w-full h-full translate-x-[-100%]"
    style="transition: transform 0.7s ease-in-out;"
  >
    {
      extendedSlides.map((slide, index) => (
        <div class="min-w-full h-full relative" key={index}>
          <Image
            src={slide.image}
            alt={slide.subtitle}
            quality="low"
            class="absolute inset-0 w-full h-full object-cover z-0"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-black/30 z-10" />
          <div class="relative z-20 h-full flex items-center pt-0 md:items-start md:pt-36 px-4 md:px-0 container mx-auto">
            <div class="max-w-lg bg-[#468E8E]/50 p-6 text-white rounded-4xl">
              <span class="text-amber-400 font-medium text-sm">
                {slide.subtitle}
              </span>
              <p class="text-3xl md:text-5xl font-bold mb-4">{slide.title}</p>
              <p class="text-sm md:text-base">{slide.description}</p>
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Dots -->
  <div
    class="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex gap-2 z-20"
    id="slide-dots"
  >
    {
      slides.map((_, index) => (
        <button
          class={`w-3 h-3 rounded-full transition-all ${index === 0 ? "bg-amber-400 w-6" : "bg-white/50"}`}
          data-index={index + 1}
          aria-label={`Ir al slide ${index + 1}`}
        />
      ))
    }
  </div>
</section>

<!-- JavaScript -->
<script is:inline>
  function initSlider() {
    const wrapper = document.getElementById("slide-wrapper");
    const dots = document.querySelectorAll("#slide-dots button");

    if (!wrapper || dots.length === 0) return;

    const slidesCount = dots.length;
    let currentIndex = 1;
    let autoSlide = null;

    const goToSlide = (index, skipTransition = false) => {
      currentIndex = index;
      if (skipTransition) {
        wrapper.style.transition = "none";
        wrapper.style.transform = `translateX(-${currentIndex * 100}%)`;

        // 游눠 Forzar reflow para evitar pantallazo
        wrapper.offsetHeight; // <- esta l칤nea es clave
        wrapper.style.transition = "transform 0.7s ease-in-out";
      } else {
        wrapper.style.transition = "transform 0.7s ease-in-out";
        wrapper.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      // Actualizar Dots
      dots.forEach((dot, i) => {
        const active = i + 1 === currentIndex;
        dot.classList.toggle("bg-amber-400", active);
        dot.classList.toggle("bg-white/50", !active);
        dot.classList.toggle("w-6", active);
        dot.classList.toggle("w-3", !active);
      });
    };

    wrapper.addEventListener("transitionend", () => {
      if (currentIndex === 0) {
        goToSlide(slidesCount, true); // <- sin transici칩n, forzando reflow
      } else if (currentIndex === slidesCount + 1) {
        goToSlide(1, true);
      }
    });

    const resetAutoSlide = () => {
      clearInterval(autoSlide);
      autoSlide = setInterval(() => goToSlide(currentIndex + 1), 5000);
    };

    wrapper.addEventListener("transitionend", () => {
      if (currentIndex === 0) {
        goToSlide(slidesCount, true); // 칰ltimo real
      }
      if (currentIndex === slidesCount + 1) {
        goToSlide(1, true); // primer real
      }
    });

    dots.forEach((dot) => {
      dot.addEventListener("click", () => {
        goToSlide(parseInt(dot.dataset.index));
        resetAutoSlide();
      });
    });

    goToSlide(1, true); // Posicionar al primer slide real
    resetAutoSlide();
  }

  document.addEventListener("DOMContentLoaded", initSlider);
  document.addEventListener("astro:after-swap", initSlider);
</script>
