---
import img1 from "../images/slide/imagen-1.webp";
import img2 from "../images/slide/imagen-2.webp";
import img3 from "../images/slide/imagen-3.webp";
import img4 from "../images/slide/imagen-4.webp";
import img5 from "../images/slide/imagen-5.webp";

import { Image } from "astro:assets";

const slides = [
  { image: img1, title: "Descubre el Perú con nosotros", subtitle: "Amazonas", description: "Viaja a los destinos más increíbles, vive experiencias únicas y memorables." },
  { image: img2, title: "Descubre el Perú con nosotros", subtitle: "Cañón del Colca", description: "Viaja a los destinos más increíbles, vive experiencias únicas y memorables." },
  { image: img3, title: "Descubre el Perú con nosotros", subtitle: "Arequipa", description: "Viaja a los destinos más increíbles, vive experiencias únicas y memorables." },
  { image: img4, title: "Descubre el Perú con nosotros", subtitle: "Huaca Pucllana", description: "Viaja a los destinos más increíbles, vive experiencias únicas y memorables." },
  { image: img5, title: "Descubre el Perú con nosotros", subtitle: "Islas de los Uros", description: "Viaja a los destinos más increíbles, vive experiencias únicas y memorables." }
];
---

<section class="relative h-[calc(100vh-80px)] overflow-hidden z-0 mb-8" id="hero-slider">
  <!-- Slide Wrapper -->
  <div id="slide-wrapper" class="flex transition-transform duration-700 ease-in-out w-full h-full cursor-grab active:cursor-grabbing">
    {slides.map((slide) => (
      <div class="min-w-full h-full relative">
        <Image src={slide.image} alt={slide.subtitle} quality="low" class="absolute inset-0 w-full h-full object-cover z-0" loading="lazy" />
        <div class="absolute inset-0 bg-black/30 z-10"></div>
        <div class="relative z-20 h-full flex items-center md:items-start md:pt-36 px-4 md:px-0 container mx-auto">
          <div class="max-w-lg bg-[#008080]/50 p-6 text-white rounded-4xl">
            <span class="text-amber-400 font-medium text-sm">{slide.subtitle}</span>
            <p class="text-3xl md:text-5xl font-bold mb-4">{slide.title}</p>
            <p class="text-sm md:text-base">{slide.description}</p>
          </div>
        </div>
      </div>
    ))}
    <!-- Clonar el primer slide para efecto infinito -->
    <div class="min-w-full h-full relative">
      <Image src={slides[0].image} alt={slides[0].subtitle} quality="low" class="absolute inset-0 w-full h-full object-cover z-0" loading="lazy" />
      <div class="absolute inset-0 bg-black/30 z-10"></div>
      <div class="relative z-20 h-full flex items-center md:items-start md:pt-36 px-4 md:px-0 container mx-auto">
        <div class="max-w-lg bg-[#008080]/50 p-6 text-white rounded-4xl">
          <span class="text-amber-400 font-medium text-sm">{slides[0].subtitle}</span>
          <p class="text-3xl md:text-5xl font-bold mb-4">{slides[0].title}</p>
          <p class="text-sm md:text-base">{slides[0].description}</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Dots -->
  <div class="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex gap-2 z-20" id="slide-dots">
    {slides.map((_, index) => (
      <button class={`w-3 h-3 rounded-full transition-all ${index === 0 ? "bg-amber-400 w-6" : "bg-white/50"}`} data-index={index} aria-label={`Ir al slide ${index + 1}`} />
    ))}
  </div>
</section>

<!-- JavaScript -->
<script is:inline>
  function initSlider() {
    const wrapper = document.getElementById("slide-wrapper");
    const dots = document.querySelectorAll("#slide-dots button");

    if (!wrapper || dots.length === 0) return;

    const slidesCount = dots.length;
    let currentIndex = 0;
    let autoSlide = null;
    let isDragging = false, startPos = 0, currentTranslate = 0, prevTranslate = 0;

    const goToSlide = (index, smooth = true) => {
      if (smooth) wrapper.classList.add("transition-transform", "duration-700", "ease-in-out");
      else wrapper.classList.remove("transition-transform", "duration-700", "ease-in-out");
      
      wrapper.style.transform = `translateX(-${index * 100}%)`;
    };

    const updateDots = (index) => {
      dots.forEach((dot, i) => {
        dot.classList.toggle("bg-amber-400", i === index);
        dot.classList.toggle("bg-white/50", i !== index);
        dot.classList.toggle("w-6", i === index);
        dot.classList.toggle("w-3", i !== index);
      });
    };

    const nextSlide = () => {
      currentIndex++;
      goToSlide(currentIndex);
      if (currentIndex === slidesCount) {
        setTimeout(() => {
          goToSlide(0, false);
          currentIndex = 0;
          updateDots(currentIndex);
        }, 700);
      } else {
        updateDots(currentIndex);
      }
    };

    const resetAutoSlide = () => {
      clearInterval(autoSlide);
      autoSlide = setInterval(nextSlide, 5000);
    };

    dots.forEach((dot) => {
      dot.addEventListener("click", () => {
        currentIndex = parseInt(dot.dataset.index);
        goToSlide(currentIndex);
        updateDots(currentIndex);
        resetAutoSlide();
      });
    });

    // Arrastrar con mouse/touch
    const touchStart = (event) => {
      isDragging = true;
      startPos = event.touches ? event.touches[0].clientX : event.clientX;
      prevTranslate = currentTranslate;
    };

    const touchMove = (event) => {
      if (!isDragging) return;
      const currentPos = event.touches ? event.touches[0].clientX : event.clientX;
      currentTranslate = prevTranslate + (currentPos - startPos);
      wrapper.style.transform = `translateX(${currentTranslate}px)`;
    };

    const touchEnd = () => {
      isDragging = false;
      if (currentTranslate < prevTranslate - 50) nextSlide();
      else goToSlide(currentIndex);
    };

    wrapper.addEventListener("mousedown", touchStart);
    wrapper.addEventListener("mousemove", touchMove);
    wrapper.addEventListener("mouseup", touchEnd);
    wrapper.addEventListener("touchstart", touchStart);
    wrapper.addEventListener("touchmove", touchMove);
    wrapper.addEventListener("touchend", touchEnd);

    // Iniciar
    goToSlide(0, false);
    updateDots(0);
    resetAutoSlide();
  }

  document.addEventListener("DOMContentLoaded", initSlider);
  document.addEventListener("astro:after-swap", initSlider);
</script>
